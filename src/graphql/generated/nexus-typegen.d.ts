/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Article: { // root type
    description?: string | null; // String
    id: number; // Int!
    name: string; // String!
    serial?: string | null; // String
  }
  ArticlePage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Article'][]; // [Article!]!
  }
  Institution: { // root type
    id: number; // Int!
    name: string; // String!
  }
  InstitutionPage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Institution'][]; // [Institution!]!
  }
  Mutation: {};
  PhisicalState: { // root type
    description?: string | null; // String
    id: number; // Int!
    name: string; // String!
  }
  PhisicalStatePage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['PhisicalState'][]; // [PhisicalState!]!
  }
  Professor: { // root type
    id: number; // Int!
    lastname: string; // String!
    name: string; // String!
    personalRegister: string; // String!
    phone?: string | null; // String
  }
  ProfessorPage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Professor'][]; // [Professor!]!
  }
  Query: {};
  User: { // root type
    description?: string | null; // String
    id: number; // Int!
    lastname: string; // String!
    name: string; // String!
    phone?: string | null; // String
    role: string; // String!
    username: string; // String!
  }
  UserPage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['User'][]; // [User!]!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Article: { // field return type
    description: string | null; // String
    id: number; // Int!
    institution: NexusGenRootTypes['Institution']; // Institution!
    name: string; // String!
    phisicalState: NexusGenRootTypes['PhisicalState']; // PhisicalState!
    serial: string | null; // String
  }
  ArticlePage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Article'][]; // [Article!]!
  }
  Institution: { // field return type
    id: number; // Int!
    name: string; // String!
  }
  InstitutionPage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Institution'][]; // [Institution!]!
  }
  Mutation: { // field return type
    createArticle: NexusGenRootTypes['Article']; // Article!
    createInstitution: NexusGenRootTypes['Institution']; // Institution!
    createPhisicalState: NexusGenRootTypes['PhisicalState']; // PhisicalState!
    createProfessor: NexusGenRootTypes['Professor']; // Professor!
    createUser: NexusGenRootTypes['User']; // User!
    deleteArticle: string; // String!
    deleteInstitution: string; // String!
    deletePhisicalState: string; // String!
    deleteProfessor: string; // String!
    deleteUser: string; // String!
    updateArticle: NexusGenRootTypes['Article']; // Article!
    updateInstitution: NexusGenRootTypes['Institution']; // Institution!
    updatePassword: string; // String!
    updatePhisicalState: NexusGenRootTypes['PhisicalState']; // PhisicalState!
    updateProfessor: NexusGenRootTypes['Professor']; // Professor!
    updateUser: NexusGenRootTypes['User']; // User!
  }
  PhisicalState: { // field return type
    description: string | null; // String
    id: number; // Int!
    institution: NexusGenRootTypes['Institution']; // Institution!
    name: string; // String!
  }
  PhisicalStatePage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['PhisicalState'][]; // [PhisicalState!]!
  }
  Professor: { // field return type
    id: number; // Int!
    institution: NexusGenRootTypes['Institution']; // Institution!
    lastname: string; // String!
    name: string; // String!
    personalRegister: string; // String!
    phone: string | null; // String
  }
  ProfessorPage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Professor'][]; // [Professor!]!
  }
  Query: { // field return type
    article: NexusGenRootTypes['Article']; // Article!
    articles: NexusGenRootTypes['ArticlePage']; // ArticlePage!
    institution: NexusGenRootTypes['Institution']; // Institution!
    institutions: NexusGenRootTypes['InstitutionPage']; // InstitutionPage!
    login: string | null; // String
    me: NexusGenRootTypes['User'] | null; // User
    phisicalState: NexusGenRootTypes['PhisicalState']; // PhisicalState!
    phisicalStates: NexusGenRootTypes['PhisicalStatePage']; // PhisicalStatePage!
    professor: NexusGenRootTypes['Professor']; // Professor!
    professors: NexusGenRootTypes['ProfessorPage']; // ProfessorPage!
    user: NexusGenRootTypes['User']; // User!
    users: NexusGenRootTypes['UserPage']; // UserPage!
  }
  User: { // field return type
    description: string | null; // String
    id: number; // Int!
    institution: NexusGenRootTypes['Institution']; // Institution!
    lastname: string; // String!
    name: string; // String!
    phone: string | null; // String
    role: string; // String!
    username: string; // String!
  }
  UserPage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['User'][]; // [User!]!
  }
}

export interface NexusGenFieldTypeNames {
  Article: { // field return type name
    description: 'String'
    id: 'Int'
    institution: 'Institution'
    name: 'String'
    phisicalState: 'PhisicalState'
    serial: 'String'
  }
  ArticlePage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'Article'
  }
  Institution: { // field return type name
    id: 'Int'
    name: 'String'
  }
  InstitutionPage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'Institution'
  }
  Mutation: { // field return type name
    createArticle: 'Article'
    createInstitution: 'Institution'
    createPhisicalState: 'PhisicalState'
    createProfessor: 'Professor'
    createUser: 'User'
    deleteArticle: 'String'
    deleteInstitution: 'String'
    deletePhisicalState: 'String'
    deleteProfessor: 'String'
    deleteUser: 'String'
    updateArticle: 'Article'
    updateInstitution: 'Institution'
    updatePassword: 'String'
    updatePhisicalState: 'PhisicalState'
    updateProfessor: 'Professor'
    updateUser: 'User'
  }
  PhisicalState: { // field return type name
    description: 'String'
    id: 'Int'
    institution: 'Institution'
    name: 'String'
  }
  PhisicalStatePage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'PhisicalState'
  }
  Professor: { // field return type name
    id: 'Int'
    institution: 'Institution'
    lastname: 'String'
    name: 'String'
    personalRegister: 'String'
    phone: 'String'
  }
  ProfessorPage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'Professor'
  }
  Query: { // field return type name
    article: 'Article'
    articles: 'ArticlePage'
    institution: 'Institution'
    institutions: 'InstitutionPage'
    login: 'String'
    me: 'User'
    phisicalState: 'PhisicalState'
    phisicalStates: 'PhisicalStatePage'
    professor: 'Professor'
    professors: 'ProfessorPage'
    user: 'User'
    users: 'UserPage'
  }
  User: { // field return type name
    description: 'String'
    id: 'Int'
    institution: 'Institution'
    lastname: 'String'
    name: 'String'
    phone: 'String'
    role: 'String'
    username: 'String'
  }
  UserPage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'User'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createArticle: { // args
      description?: string | null; // String
      name: string; // String!
      phisicalStateId: number; // Int!
      serial?: string | null; // String
    }
    createInstitution: { // args
      name: string; // String!
    }
    createPhisicalState: { // args
      description?: string | null; // String
      name: string; // String!
    }
    createProfessor: { // args
      lastname: string; // String!
      name: string; // String!
      personalRegister: string; // String!
      phone?: string | null; // String
    }
    createUser: { // args
      description?: string | null; // String
      lastname: string; // String!
      name: string; // String!
      password: string; // String!
      phone?: string | null; // String
      role: string; // String!
      username: string; // String!
    }
    deleteArticle: { // args
      id: number; // Int!
    }
    deleteInstitution: { // args
      id: number; // Int!
    }
    deletePhisicalState: { // args
      id: number; // Int!
    }
    deleteProfessor: { // args
      id: number; // Int!
    }
    deleteUser: { // args
      id: number; // Int!
    }
    updateArticle: { // args
      description?: string | null; // String
      id: number; // Int!
      name?: string | null; // String
      phisicalStateId?: number | null; // Int
      serial?: string | null; // String
    }
    updateInstitution: { // args
      id: number; // Int!
      name?: string | null; // String
    }
    updatePassword: { // args
      newPassword: string; // String!
      oldPassword: string; // String!
      userId: number; // Int!
    }
    updatePhisicalState: { // args
      description?: string | null; // String
      id: number; // Int!
      name?: string | null; // String
    }
    updateProfessor: { // args
      id: number; // Int!
      lastname?: string | null; // String
      name?: string | null; // String
      personalRegister?: string | null; // String
      phone?: string | null; // String
    }
    updateUser: { // args
      description?: string | null; // String
      id: number; // Int!
      lastname?: string | null; // String
      name?: string | null; // String
      phone?: string | null; // String
      role?: string | null; // String
      username?: string | null; // String
    }
  }
  Query: {
    article: { // args
      id: number; // Int!
    }
    articles: { // args
      limit: number; // Int!
      page: number; // Int!
    }
    institution: { // args
      id: number; // Int!
    }
    institutions: { // args
      limit: number; // Int!
      page: number; // Int!
    }
    login: { // args
      password: string; // String!
      username: string; // String!
    }
    phisicalState: { // args
      id: number; // Int!
    }
    phisicalStates: { // args
      limit: number; // Int!
      page: number; // Int!
    }
    professor: { // args
      id: number; // Int!
    }
    professors: { // args
      limit: number; // Int!
      page: number; // Int!
    }
    user: { // args
      id: number; // Int!
    }
    users: { // args
      limit: number; // Int!
      page: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}