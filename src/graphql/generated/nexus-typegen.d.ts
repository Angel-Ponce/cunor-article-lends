/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Institution: { // root type
    id: number; // Int!
    name: string; // String!
  }
  InstitutionPage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Institution'][]; // [Institution!]!
  }
  Mutation: {};
  PhisicalState: { // root type
    description?: string | null; // String
    id: number; // Int!
    name: string; // String!
  }
  PhisicalStatePage: { // root type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['PhisicalState'][]; // [PhisicalState!]!
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Institution: { // field return type
    id: number; // Int!
    name: string; // String!
  }
  InstitutionPage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['Institution'][]; // [Institution!]!
  }
  Mutation: { // field return type
    createInstitution: NexusGenRootTypes['Institution']; // Institution!
    createPhisicalState: NexusGenRootTypes['PhisicalState']; // PhisicalState!
    deleteInstitution: NexusGenRootTypes['Institution']; // Institution!
    updateInstitution: NexusGenRootTypes['Institution']; // Institution!
  }
  PhisicalState: { // field return type
    description: string | null; // String
    id: number; // Int!
    institution: NexusGenRootTypes['Institution']; // Institution!
    name: string; // String!
  }
  PhisicalStatePage: { // field return type
    length: number; // Int!
    pages: number; // Int!
    rows: NexusGenRootTypes['PhisicalState'][]; // [PhisicalState!]!
  }
  Query: { // field return type
    institution: NexusGenRootTypes['Institution']; // Institution!
    institutions: NexusGenRootTypes['InstitutionPage']; // InstitutionPage!
    phisicalState: NexusGenRootTypes['PhisicalState']; // PhisicalState!
    phisicalStates: NexusGenRootTypes['PhisicalStatePage']; // PhisicalStatePage!
  }
}

export interface NexusGenFieldTypeNames {
  Institution: { // field return type name
    id: 'Int'
    name: 'String'
  }
  InstitutionPage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'Institution'
  }
  Mutation: { // field return type name
    createInstitution: 'Institution'
    createPhisicalState: 'PhisicalState'
    deleteInstitution: 'Institution'
    updateInstitution: 'Institution'
  }
  PhisicalState: { // field return type name
    description: 'String'
    id: 'Int'
    institution: 'Institution'
    name: 'String'
  }
  PhisicalStatePage: { // field return type name
    length: 'Int'
    pages: 'Int'
    rows: 'PhisicalState'
  }
  Query: { // field return type name
    institution: 'Institution'
    institutions: 'InstitutionPage'
    phisicalState: 'PhisicalState'
    phisicalStates: 'PhisicalStatePage'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createInstitution: { // args
      name: string; // String!
    }
    createPhisicalState: { // args
      description?: string | null; // String
      name: string; // String!
    }
    deleteInstitution: { // args
      id: number; // Int!
    }
    updateInstitution: { // args
      id: number; // Int!
      name?: string | null; // String
    }
  }
  Query: {
    institution: { // args
      id: number; // Int!
    }
    institutions: { // args
      limit: number; // Int!
      page: number; // Int!
    }
    phisicalState: { // args
      id: number; // Int!
    }
    phisicalStates: { // args
      limit: number; // Int!
      page: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}